/*
 * MIT License
 *
 * Copyright (c) 2017 Stamina Development
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    ext {
        forge_gradle_version = '2.1-SNAPSHOT'
        mixin_gradle_version = '0.5-SNAPSHOT'
        shadow_version = '1.2.4'
    }

    repositories {
        jcenter()

        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }

        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:$forge_gradle_version"
        classpath "org.spongepowered:mixingradle:$mixin_gradle_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}

version '1.0.0-SNAPSHOT'

allprojects {
    ext {
        mixinVersion = '0.7.4-SNAPSHOT'
    }

    repositories {
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        compile "org.spongepowered:mixin:$mixinVersion"
    }
}

repositories {
    maven {
        name = 'minecraft'
        url = 'https://libraries.minecraft.net/'
    }
}

dependencies {
    compile ('net.minecraft:launchwrapper:1.11') {
        transitive = false
    }
}

subprojects {
    apply plugin: 'net.minecraftforge.gradle.tweaker-client'
    apply plugin: 'org.spongepowered.mixin'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileJava.options.encoding = 'UTF-8'

    archivesBaseName = 'mixin-' + minecraftVersion

    sourceSets {
        main {
            ext.refMap = 'main.minecraft-api.refmap.json'
        }
    }

    dependencies {
        compile project(':mixin')
        compile project(':events')
    }

    minecraft {
        version = minecraftVersion
        mappings = minecraftMappings
        runDir = rootProject.projectDir.absolutePath + '/run'

        makeObfSourceJar = false
        tweakClass = 'pw.stamina.minecraftapi.tweak.MinecraftApiTweaker'
    }

    mixin {
        defaultObfuscationEnv notch
    }

    reobf {
        jar {
            mappingType = 'SEARGE'
        }
        stagingJar {
            mappingType = 'NOTCH'
            classpath = sourceSets.main.compileClasspath
        }
        shadowJar {
            mappingType = 'NOTCH'
            classpath = sourceSets.main.compileClasspath
        }
    }

    task stagingJar(type: Jar) {
        from sourceSets.main.output
        classifier = 'staging'
    }

    shadowJar {
        dependsOn 'reobfStagingJar'

        from sourceSets.main.output

        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'dummyThing'
        exclude 'LICENSE.txt'

        dependencies {
            include dependency('org.spongepowered:mixin')
            include dependency(':minecraft-api')
            include dependency(':common')
        }

        classifier = 'release'
    }
}
